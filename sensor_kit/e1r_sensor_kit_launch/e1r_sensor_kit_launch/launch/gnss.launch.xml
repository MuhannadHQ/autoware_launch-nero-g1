<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="gnss_receiver" default="xsens" description="ublox or septentrio or xsens"/>

  <group>
    <push-ros-namespace namespace="gnss"/>

    <!-- Switch topic name -->
    <let name="navsatfix_topic_name" value="ublox/nav_sat_fix" if="$(eval &quot;'$(var gnss_receiver)'=='ublox'&quot;)"/>
    <let name="navsatfix_topic_name" value="septentrio/nav_sat_fix" if="$(eval &quot;'$(var gnss_receiver)'=='septentrio'&quot;)"/>
    <let name="navsatfix_topic_name" value="xsens/nav_sat_fix" if="$(eval &quot;'$(var gnss_receiver)'=='xsens'&quot;)"/>
    <let name="orientation_topic_name" value="/autoware_orientation"/>

    <!-- Ublox Driver -->
    <group if="$(eval &quot;'$(var gnss_receiver)'=='ublox'&quot;)">
      <node pkg="ublox_gps" name="ublox" exec="ublox_gps_node" if="$(var launch_driver)" respawn="true" respawn_delay="1.0">
        <remap from="~/fix" to="~/nav_sat_fix"/>
        <param from="$(find-pkg-share ublox_gps)/c94_f9p_rover.yaml"/>
      </node>
    </group>

    <!-- Septentrio GNSS Driver -->
    <group if="$(eval &quot;'$(var launch_driver)' and '$(var gnss_receiver)'=='septentrio'&quot;)">
      <include file="$(find-pkg-share septentrio_gnss_driver)/launch/mosaic_x5_rover.launch.xml"/>
    </group>

    <!-- Xsens GNSS + RTK -->
    <group if="$(eval &quot;'$(var launch_driver)' and '$(var gnss_receiver)'=='xsens'&quot;)">

      <node pkg="xsens_mti_ros2_driver" exec="xsens_mti_node" name="xsens_mti_node" respawn="true">
        <param from="$(find-pkg-share xsens_mti_ros2_driver)/param/xsens_mti_node.yaml"/>
        <remap from="/gnss" to="/xsens/nav_sat_fix"/>
        <remap from="/imu/data" to="/imu_data"/>
      </node>
      <!-- ntrip Client -->
      <!-- <include file="$(find-pkg-share ntrip)/launch/ntrip_launch.py"/> -->
    </group>

    <!-- GNSS-INS Converter Node -->
    <node pkg="gnss_ins_converter"
          exec="converter_node"
          name="gnss_ins_converter"
          output="screen">

      <!-- Optional parameters -->
      <param name="rmse_x" value="0.01"/>
      <param name="rmse_y" value="0.01"/>
      <param name="rmse_z" value="0.02"/>
    </node>

    <!-- NavSatFix to MGRS Pose -->
    <include file="$(find-pkg-share autoware_gnss_poser)/launch/gnss_poser.launch.xml">
      <arg name="input_topic_fix" value="$(var navsatfix_topic_name)"/>
      <arg name="input_topic_orientation" value="$(var orientation_topic_name)"/>

      <arg name="output_topic_gnss_pose" value="pose"/>
      <arg name="output_topic_gnss_pose_cov" value="pose_with_covariance"/>
      <arg name="output_topic_gnss_fixed" value="fixed"/>

      <arg name="use_gnss_ins_orientation" value="true"/>
      <arg name="gnss_frame" value="imu_link"/>
     </include>

    <!-- IMU corrector -->
    <!-- <group>
      <push-ros-namespace namespace="imu"/>
      <arg name="imu_raw_name" default="/xsens/imu_raw"/>
      <arg name="imu_corrector_param_file" default="$(find-pkg-share e1r_sensor_kit_description)/config/imu_corrector.param.yaml"/>
      <include file="$(find-pkg-share autoware_imu_corrector)/launch/imu_corrector.launch.xml">
        <arg name="input_topic" value="$(var imu_raw_name)"/>
        <arg name="output_topic" value="imu_data"/>
        <arg name="param_file" value="$(var imu_corrector_param_file)"/>
      </include>

      <include file="$(find-pkg-share autoware_imu_corrector)/launch/gyro_bias_estimator.launch.xml">
        <arg name="input_imu_raw" value="$(var imu_raw_name)"/>
        <arg name="input_odom" value="/localization/kinematic_state"/>
        <arg name="input_pose_ndt" value="/localization/pose_estimator/pose_with_covariance"/>
        <arg name="imu_corrector_param_file" value="$(var imu_corrector_param_file)"/>
      </include>
    </group> -->

  </group>
</launch>
