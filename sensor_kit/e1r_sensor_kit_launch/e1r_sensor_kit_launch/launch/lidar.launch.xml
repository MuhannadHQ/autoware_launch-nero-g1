<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="host_ip" default="192.168.1.10"/>
  <arg name="use_concat_filter" default="false"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="vehicle_mirror_param_file"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <!-- Parameters for Nebula Container  -->
  <arg name="model" default="Bpearl"/>
  <arg name="max_range" default="30.0"/>
  <arg name="min_range" default="0.4"/>
  <arg name="sensor_frame" default="rslidar"/>
  <arg name="return_mode" default="SingleStrongest"/>
  <arg name="sensor_ip" default="192.168.1.200"/>
  <arg name="host_ip" default="255.255.255.255"/>
  <arg name="data_port" default="2368"/>
  <arg name="gnss_port" default="7788"/>
  <arg name="scan_phase" default="0.0"/>
  <arg name="cloud_min_angle" default="0"/>
  <arg name="cloud_max_angle" default="360"/>
  <arg name="vehicle_mirror_param_file"/>
  <arg name="container_name" default="robosense_node_container"/>
  <arg name="udp_only" default="false"/>


  <group>
    <push-ros-namespace namespace="lidar"/>

    <!-- E1R Driver -->
    <include file="$(find-pkg-share rslidar_sdk)/launch/start.py">
    </include>

      <!-- Pointcloud converter -->
    <include file="$(find-pkg-share lidar_pointcloud_converter)/launch/lidar_converter_launch.py">
    </include>

    <!-- Nebula Pointcloud Processor -->
    <include file="$(find-pkg-share e1r_common_sensor_launch)/launch/nebula_node_container.launch.py">
      <arg name="launch_driver" value="$(var launch_driver)"/>
      <arg name="sensor_model" value="$(var model)"/>
      <arg name="return_mode" value="$(var return_mode)"/>
      <arg name="max_range" value="$(var max_range)"/>
      <arg name="min_range" value="$(var min_range)"/>
      <arg name="frame_id" value="$(var sensor_frame)"/>
      <arg name="sensor_ip" value="$(var sensor_ip)"/>
      <arg name="host_ip" value="$(var host_ip)"/>
      <arg name="data_port" value="$(var data_port)"/>
      <arg name="scan_phase" value="$(var scan_phase)"/>
      <arg name="cloud_min_angle" value="$(var cloud_min_angle)"/>
      <arg name="cloud_max_angle" value="$(var cloud_max_angle)"/>
      <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
      <arg name="use_intra_process" value="true"/>
      <arg name="use_multithread" value="false"/>
      <arg name="container_name" value="$(var container_name)"/>
      <arg name="udp_only" value="$(var udp_only)"/>
    </include>


    <!-- <group>
      <push-ros-namespace namespace="top"/>
      <include file="$(find-pkg-share e1r_common_sensor_launch)/launch/velodyne_VLS128.launch.xml">
        <arg name="max_range" value="250.0"/>
        <arg name="sensor_frame" value="velodyne_top"/>
        <arg name="sensor_ip" value="192.168.1.201"/>
        <arg name="host_ip" value="$(var host_ip)"/>
        <arg name="data_port" value="2368"/>
        <arg name="scan_phase" value="300.0"/>
        <arg name="launch_driver" value="$(var launch_driver)"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
    </group>

    <group>
      <push-ros-namespace namespace="left"/>
      <include file="$(find-pkg-share e1r_common_sensor_launch)/launch/velodyne_VLP16.launch.xml">
        <arg name="max_range" value="5.0"/>
        <arg name="sensor_frame" value="velodyne_left"/>
        <arg name="sensor_ip" value="192.168.1.202"/>
        <arg name="host_ip" value="$(var host_ip)"/>
        <arg name="data_port" value="2369"/>
        <arg name="scan_phase" value="180.0"/>
        <arg name="cloud_min_angle" value="300"/>
        <arg name="cloud_max_angle" value="60"/>
        <arg name="launch_driver" value="$(var launch_driver)"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
    </group>

    <group>
      <push-ros-namespace namespace="right"/>
      <include file="$(find-pkg-share e1r_common_sensor_launch)/launch/velodyne_VLP16.launch.xml">
        <arg name="max_range" value="5.0"/>
        <arg name="sensor_frame" value="velodyne_right"/>
        <arg name="sensor_ip" value="192.168.1.203"/>
        <arg name="host_ip" value="$(var host_ip)"/>
        <arg name="data_port" value="2370"/>
        <arg name="scan_phase" value="180.0"/>
        <arg name="cloud_min_angle" value="300"/>
        <arg name="cloud_max_angle" value="60"/>
        <arg name="launch_driver" value="$(var launch_driver)"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
    </group>

    <group>
      <push-ros-namespace namespace="rear"/>
      <include file="$(find-pkg-share e1r_common_sensor_launch)/launch/velodyne_VLP16.launch.xml">
        <arg name="max_range" value="1.5"/>
        <arg name="sensor_frame" value="velodyne_rear"/>
        <arg name="sensor_ip" value="192.168.1.204"/>
        <arg name="host_ip" value="$(var host_ip)"/>
        <arg name="data_port" value="2371"/>
        <arg name="scan_phase" value="180.0"/>
        <arg name="cloud_min_angle" value="300"/>
        <arg name="cloud_max_angle" value="60"/>
        <arg name="launch_driver" value="$(var launch_driver)"/>
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
        <arg name="container_name" value="pointcloud_container"/>
      </include>
    </group> -->

    <!-- <include file="$(find-pkg-share sample_sensor_kit_launch)/launch/pointcloud_preprocessor.launch.py">
      <arg name="base_frame" value="base_link"/>
      <arg name="use_intra_process" value="true"/>
      <arg name="use_multithread" value="true"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include> -->
  </group>
</launch>
